{
    "contents" : "library(raster)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(geosphere)\n\nsetwd(\"~/stat/Vellore_study/Old_Town_sewage_ODfield_waterpipe_streets\")\n#sewage\nsewage1 <- readOGR(\".\",\"BhNagar_sewagechannels_44N\")\nsewage2 <- readOGR(\".\",\"FBD_sewage_44N\")\nsewage3 <- readOGR(\".\",\"MGRNagar_sewageline_44N\")\nsewage4 <- readOGR(\".\",\"SSKMan_sewage_44N\")\nsewage5 <- readOGR(\".\",\"UthK_sewage_44N\")\n\nsewage <- gUnion(gUnion(gUnion(gUnion(sewage1,sewage2),sewage3),sewage4),sewage5)\nsewage <- spTransform(sewage, CRS(\"+proj=longlat +datum=WGS84\"))\n\n#streets;\nstreet1 <- readOGR(\".\",\"BhNagar_streets_44N\")\nstreet2 <- readOGR(\".\",\"FBD_streets_44N\")\nstreet3 <- readOGR(\".\",\"MGRNagar_streets_44N\")\nstreet4 <- readOGR(\".\",\"SSKMan_streets_44N\")\nstreet5 <- readOGR(\".\",\"UthK_streets_44N\")\n\nstreet <- gUnion(gUnion(gUnion(gUnion(street1,street2),street3),street4),street5)\nstreet <- spTransform(street, CRS(\"+proj=longlat +datum=WGS84\"))\n\n#fecal area;\nfecal1 <- readOGR(\".\",\"BhNagar_fecalpolygons_44N\")\nfecal2 <- readOGR(\".\",\"FBD_fecalpolygons_44N\")\nfecal3 <- readOGR(\".\",\"MGRNagar_fecalpolygons_44N\")\nfecal4 <- readOGR(\".\",\"SSKMan_fecalpolygons_44N\")\nfecal5 <- readOGR(\".\",\"UthK_fecalpolygons_44N\")\n\nfecal <- gUnion(gUnion(gUnion(gUnion(fecal1,fecal2),fecal3),fecal4),fecal5)\nfecal <- spTransform(fecal, CRS(\"+proj=longlat +datum=WGS84\"))\n\n#the.sewage.projected <- spTransform(sewage, CRS( \"+init=epsg:32635\" ))\n#sew <- raster(extent(sewage), crs=projection(sewage))\n#the.points.sp<-SpatialPointsDataFrame(dat0[, c(\"LON\", \"LAT\")], data.frame(ID=seq(1:nrow(dat0))),proj4string=CRS(\"+proj=longlat +datum=WGS84\"))\n#the.points.projected <- spTransform(the.points.sp[1, ], CRS( \"+init=epsg:32635\" ))\n#the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)\n#the.circles.sp <- spTransform(the.circles.projected, CRS(\"+proj=longlat +datum=WGS84\"))\n#the.point.sp <- spTransform(the.circles.projected, CRS(\"+proj=longlat +datum=WGS84\"))\n\n#plot(the.sewage.projected)\n#points(the.points.projected,col=\"red\",cex=1)\n#lines(the.circles.projected)\n\n#function to calculate the length of line shape;\nline.length <- function(the.lines.projected, the.circles.projected) {\n  if (gIntersects(the.lines.projected, the.circles.projected)) {\n    lines_crp <- crop(the.lines.projected, the.circles.projected)\n    lines_crp_length <- gLength(lines_crp)\n    return(lines_crp_length)\n  } else {\n    return(0)\n  }\n}\n\n#sewage length\nthe.points.sp<-SpatialPointsDataFrame(dat0[, c(\"LON\", \"LAT\")], data.frame(ID=seq(1:nrow(dat0))),proj4string=CRS(\"+proj=longlat +datum=WGS84\"))\nthe.sewage.projected <- spTransform(sewage, CRS( \"+init=epsg:32635\" ))\nsewage.length <- c()\nfor (i in 1:length(the.points.sp[,1])) {\n  the.points.projected <- spTransform(the.points.sp[i, ], CRS( \"+init=epsg:32635\" ))\n  the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)\n  sewage.length[i]<-line.length(the.sewage.projected, the.circles.projected)\n}\n\n#street length\nthe.points.sp<-SpatialPointsDataFrame(dat0[, c(\"LON\", \"LAT\")], data.frame(ID=seq(1:nrow(dat0))),proj4string=CRS(\"+proj=longlat +datum=WGS84\"))\nthe.street.projected <- spTransform(street, CRS( \"+init=epsg:32635\" ))\nstreet.length <- c()\nfor (i in 1:length(the.points.sp[,1])) {\n  the.points.projected <- spTransform(the.points.sp[i, ], CRS( \"+init=epsg:32635\" ))\n  the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)\n  street.length[i]<-line.length(the.street.projected, the.circles.projected)\n}\n\n#distance to sewage\ndist2sewage <- c()\nfor (i in 1:length(dat0[,1])) {\n  dist2sewage[i]<-dist2Line(dat0[i,c(3,2)], sewage)[1]\n}\n\n#distance to street\ndist2street <- c()\nfor (i in 1:length(dat0[,1])) {\n  dist2street[i]<-dist2Line(dat0[i,c(3,2)], street)[1]\n}\n\n\n#distance to fecal area\ndist2fecal <- c()\nfor (i in 1:length(dat0[,1])) {\n  dist2fecal[i]<-dist2Line(dat0[i,c(3,2)], fecal)[1]\n}\n\n\n\n\n\n#############################################################\ngnomic.buffer <- function(p, r) {\n  stopifnot(length(p) == 1)\n  gnom <- sprintf(\"+proj=gnom +lat_0=%s +lon_0=%s +x_0=0 +y_0=0\",\n                  p@coords[[2]], p@coords[[1]])\n  projected <- spTransform(p, CRS(gnom))\n  buffered <- gBuffer(projected, width=r, byid=TRUE)\n  spTransform(buffered, p@proj4string)\n}\n\ncustom.buffer <- function(p, r) {\n  stopifnot(length(p) == 1)\n  cust <- sprintf(\"+proj=tmerc +lat_0=%s +lon_0=%s +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\", \n                  p@coords[[2]], p@coords[[1]])\n  projected <- spTransform(p, CRS(cust))\n  buffered <- gBuffer(projected, width=r, byid=TRUE)\n  spTransform(buffered, p@proj4string)\n}\n\ntest.1 <- gnomic.buffer(the.points.sp[1,], 100)\ntest.2 <- custom.buffer(the.points.sp[1,], 100)\n\n#plot(sewage)\n#lines(test.1,col=\"red\")\n#lines(test.2,col=\"blue\")\n#points(the.points.sp)\n##############################################################\n\ncnt.child <- c()\nfor (i in 1:length(the.points.sp[,1])) {\n  cnt.child[i] <- sum(over(the.points.sp,gnomic.buffer(the.points.sp[i,], 100))==i,na.rm = TRUE)\n}\n\nf.dat<-dat0\nf.dat$n_neg_bact<-f.dat$n_test-f.dat$n_pos_bact\nf.dat$n_neg_virus<-f.dat$n_test-f.dat$n_pos_virus\nf.dat$sewage.length<-sewage.length\nf.dat$street.length<-street.length\nf.dat$dist2fecal<-dist2fecal\nf.dat$dist2sewage<-dist2sewage\nf.dat$dist2street<-dist2street\nf.dat$cnt.child<-cnt.child\n\n#remove those far away from the SaniPath samples\n#plot(dat0$LON,dat0$LAT)\n#points(dat_all$ev_long,dat_all$ev_lat,col=\"red\")\nf.dat <- f.dat[which(f.dat$LAT>12.910 & f.dat$LAT<12.9151),]\n\n\n\n",
    "created" : 1469641899141.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4229661813",
    "id" : "2F0E3BC8",
    "lastKnownWriteTime" : 1469801907,
    "path" : "~/stat/CMC/v4/v4.spatial.data.R",
    "project_path" : "v4.spatial.data.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}